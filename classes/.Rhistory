plot.title = element_text(hjust = 0.5))
h3
tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
TSRatio=tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
qplot(TSRatio, geom="histogram")
hTS= qplot(TSRatio,
geom="histogram",
binwidth = 2,
boundary=0,
col=I("red"))
hTS1=hTS + stat_bin(binwidth = 2, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.3)
hTS1
TitleText1='County Teach/Student Ratio within WA Sate'
hTS1=hTS1+labs(title=TitleText1,
x ='Teach/Student Ratio',
y = 'Freequency',
caption = sourceText)
hTS2 = hTS1 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2
hTS= qplot(TSRatio,
geom="histogram",
binwidth = 2,
boundary=0,)
hTS1=hTS + stat_bin(binwidth = 2, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.3)
hTS1
TitleText1='County Teach/Student Ratio within WA Sate'
hTS1=hTS1+labs(title=TitleText1,
x ='Teach/Student Ratio',
y = 'Freequency',
caption = sourceText)
hTS2 = hTS1 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2
TitleText1='County Teacher/Student Ratio within WA Sate'
hTS1=hTS1+labs(title=TitleText1,
x ='Teach/Student Ratio',
y = 'Freequency',
caption = sourceText)
hTS2 = hTS1 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2
View(eduwa)
View(Position)
TSRatio=tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
TSRatio
as.data.frame(TSRatio)
df=as.data.frame(TSRatio)
View(df)
View(df)
View(df)
base1= ggplot(df,aes(x = TSRatio))
h1= base1 + geom_histogram(binwidth = 100,boundary=0) #changing width
h1= h1 + stat_bin(binwidth = 100, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.2)
h1
base1= ggplot(df,aes(x = TSRatio))
base1+geom_histogram()
base1= ggplot(df,aes(x = TSRatio))
base1+geom_density()
hTS= ggplot(TSRatio,aes(x = ))
qplot(TSRatio, geom="histogram")
TSRatio=tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
df=as.data.frame(TSRatio)
qplot(TSRatio, geom="histogram")
hTS= ggplot(df,aes(x =TSRatio ))
hTS= ggplot(df,aes(x =TSRatio ))
hTS
gglot(TSRatio, geom="histogram")
TSRatio=tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
TSRatio=tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
TSRatio
df=as.data.frame(TSRatio)
df=as.data.frame(TSRatio)
df
View(df)
TSRatio=tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
TSRatio=tapply(eduwa$Student.Teacher.Ratio, eduwa$County, mean,na.rm=T)
TSRatio
DF_TSRatio=as.data.frame(TSRatio)
DF_TSRatio
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
library(ggplot2)
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
plot1
ggplot(TSRatio, geom="histogram")
names(DF_TSRatio)=c('County','Ratio')
names(DF_TSRatio)=c('County','Ra')
names(DF_TSRatio)=c('County','pct')
names(DF_TSRatio)=c('Cty','pct')
DF_TSRatio=as.data.frame(TSRatio)
DF_TSRatio
names(DF_TSRatio)=c('Cty','pct')
frqTabO=as.data.frame(prop.table(table(eduwa$High.Grade)))
#names(frqTabO)=c('grade','pct')
frqTabO
frqTabO=as.data.frame(prop.table(table(eduwa$High.Grade)))
names(frqTabO)=c('grade','pct')
frqTabO
dataTSRatio
dataTSRatiot
TSRatiot
his2333=hist(eduwa3$Reduced.Lunch)
his2333
his2333=hist(TSRatio)
his2333
hist(TSRatio)
ggplot_TSRatio=qplot(TSRatio, geom="histogram")
ggplot_build(ggplot_TSRatio)$data[[1]]
ggplot_TSRatio=qplot(TSRatio, geom="histogram")
View(DF_TSRatio)
hist(TSRatio)
ggplot_TSRatio=ggplot(DF_TSRatio,aes(x = TSRatio))
ggplot_TSRatio=ggplot(DF_TSRatio,aes(x = TSRatio))
ggplot_TSRatio
base5=ggplot(DF_TSRatio,aes(x = TSRatio))
hTS= base5 + geom_histogram()
base5=ggplot(DF_TSRatio,aes(x = TSRatio))
hTS= base5 + geom_histogram()
hTS
TSRatio
hist(TSRatio)
eduwa1=eduwa[complete.cases(eduwa$Free.Lunch),]
dataHistFL=hist(eduwa1$Free.Lunch)
baseFL= ggplot(eduwa1,aes(x = Free.Lunch))
h1= baseFL + geom_histogram()
h1
dataHistFL
ggplot_build(h1)$data[[1]]
base1= ggplot(eduwa1,aes(x = Free.Lunch))
h1= base1 + geom_histogram(binwidth = 100,boundary=0) #changing width
h1= h1 + stat_bin(binwidth = 100, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.2)
h1
link1='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
load(file=url(link1))
summary(eduwa$Free.Lunch)
eduwa1=eduwa[complete.cases(eduwa$Free.Lunch),]
dataHistFL=hist(eduwa1$Free.Lunch)
baseFL= ggplot(eduwa1,aes(x = Free.Lunch))
h1= baseFL + geom_histogram()
h1
eduwa1=eduwa[complete.cases(eduwa$Free.Lunch),]
dataHistFL=hist(eduwa1$Free.Lunch)
dataHistFL
eduwa1=eduwa[complete.cases(eduwa$Free.Lunch),]
dataHistFL=hist(eduwa1$Free.Lunch)
dataHistFL
eduwa1=eduwa[complete.cases(eduwa$Free.Lunch),]
dataHistFL=hist(eduwa1$Free.Lunch)
HS=hist(TSRatio)
HS=hist(TSRatio)
HS
HS_TS=hist(TSRatio)
HS_TS
ggplot_build(hTS)$data
ggplot_build(hTS)$data
base5=ggplot(DF_TSRatio,aes(x = TSRatio))
hTS= base5 + geom_histogram()
hTS
ggplot_build(hTS)$data
base5=ggplot(DF_TSRatio,aes(x = TSRatio))
hTS= base5 + geom_histogram()
hTS
ggplot_build(hTS)$data
ggplot_build(hTS)$data[[1]]
HS_TS
hTS= base5 + geom_histogram(binwidth = 2,boundary=10) #changing width
hTS1= hTS + stat_bin(binwidth = 2, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.5)
hTS= base5 + geom_histogram(binwidth = 2,boundary=10) #changing width
hTS1= hTS + stat_bin(binwidth = 2, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.5)
hTS1
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2
hTS= base5 + geom_histogram(binwidth = 2,boundary=10) #changing width
hTS1= hTS + stat_bin(binwidth = 2, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.4)
hTS1
hTS= base5 + geom_histogram(binwidth = 2,boundary=10) #changing width
hTS1= hTS + stat_bin(binwidth = 2, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.3)
hTS1
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2
TITLE='CountyTeacher/Student Ratio in WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS2
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 #+ coord_flip()
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 #+ coord_flip()
###
ToPlotOrd=sort(ToPlot)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
tableFreq[order(-tableFreq$pct),]
base = ggplot(tableFreq, aes(x=locale,pct))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = pct,
xend = locale), color = "grey50")
lolliplot1 + geom_point()
tableFreq[order(tableFreq$pct),]
# reordering DF steps:
tableFreqO=tableFreq[order(tableFreq$pct),]
base = ggplot(tableFreqO, aes(locale,pct))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = pct,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
# new variable
tableFreqO$gap=tableFreqO$pct-25
# plot the new variable
base = ggplot(tableFreqO, aes(locale,gap))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = gap,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
xlim=c(0,50), #change to xlim
xlab = '(in %)', #change to xlab
horiz = T)
#annotating
text(x=ToPlot,y=location, #change of x and y
labels=plotLabels,
pos = 4)  # change position of the label
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS3=hTS2+scale_x_continuous(breaks=c(0,10,15,20,25,30),
limits = c(0, 30)), # expand = c(0, 0),
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS3=hTS2+scale_x_continuous(breaks=c(0,10,15,20,25,30),
limits = c(0, 30)) # expand = c(0, 0),
hTS3
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS3=hTS2+scale_x_continuous(breaks=c(10,15,20,25,30),
limits = c(10, 30)) # expand = c(0, 0),
hTS3
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS3=hTS2+scale_x_continuous(breaks=c(10,15,20,25),
limits = c(10, 20)) # expand = c(0, 0),
hTS3
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS3=hTS2+scale_x_continuous(breaks=c(10,15,20,25),
limits = c(10, 20)) # expand = c(0, 0),
hTS3
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS3=hTS2+scale_x_continuous(breaks=c(10,15,20,25),
limits = c(10, 25)) # expand = c(0, 0),
hTS3
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS3=hTS2+scale_x_continuous(breaks=c(10,15,20,23),
limits = c(10, 23)) # expand = c(0, 0),
hTS3
TITLE='CountyTeacher/Student Ratio within WA State'
hTS2=hTS1+theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
hTS2=hTS2 + labs(title=TITLE,
x ='Teacher/Student Ratio',
y = 'Frequency',
caption = sourceText)
hTS2
DensityTS=base5+geom_histogram()
DensityTS=base5+geom_histogram()
DensityTS
DensityTS=base5+geom_density()
DensityTS
DF_TSRatio=as.data.frame(TSRatio)
HS_TS=hist(TSRatio)
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS
# a new column for color
tableFreqO$PositiveGap=ifelse(tableFreqO$gap>0,T,F)
# add new aesthetics 'color'
base = ggplot(tableFreqO, aes(locale,gap,
color=PositiveGap)) #change
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = gap,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
#lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
# a new column for color
tableFreqO$PositiveGap=ifelse(tableFreqO$gap>0,T,F)
# add new aesthetics 'color'
base = ggplot(tableFreqO, aes(locale,gap,
color=PositiveGap)) #change
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = gap,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1) +
scale_colour_manual("",
breaks = c("Mean", "Meidan"),
values = c("blue", "red"))
DensityTS
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS1=DensityTS+scale_colour_manual("",
breaks = c("Mean", "Meidan"),
values = c("blue", "red"))
DensityTS1
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS1=DensityTS+scale_colour_manual(values=c("red","blue"))
DensityTS1
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS + theme(legend.key = element_rect(fill = "white",colour = "white"))
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS1=DensityTS + theme(legend.key = element_rect(fill = "white",colour = "white"))
DensityTS1
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=mean(TSRatio)),
color="blue", linetype="dashed", size=1)
DensityTS=DensityTS+geom_vline(aes(xintercept=median(TSRatio)),
color="red", linetype="dashed", size=1)
DensityTS
